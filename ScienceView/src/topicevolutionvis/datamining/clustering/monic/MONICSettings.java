/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MovingClustersDialog.java
 *
 * Created on 21/11/2011, 14:23:55
 */
package topicevolutionvis.datamining.clustering.monic;

/**
 *
 * @author USER
 */
import java.util.logging.Level;
import java.util.logging.Logger;
import topicevolutionvis.datamining.clustering.DBScanSettings;
import topicevolutionvis.projection.ProjectionData;
import topicevolutionvis.view.ScienceViewMainFrame;
import topicevolutionvis.view.TemporalProjectionViewer;

public class MONICSettings extends javax.swing.JDialog {
    private static final long serialVersionUID = 1L;

    private final TemporalProjectionViewer viewer;
    private final ProjectionData pdata;

    /**
     * Creates new form MovingClustersDialog
     */
    public MONICSettings(TemporalProjectionViewer viewer) {
        super(ScienceViewMainFrame.getInstance());
        initComponents();
        this.setLocationRelativeTo(ScienceViewMainFrame.getInstance());
        this.viewer = viewer;
        this.pdata = viewer.getProjectionData();
        this.epsSpinner.setValue(pdata.getEpsilon());
        this.minPtsSpinner.setValue(pdata.getMinPoints());
        this.thetaSpinner.setValue(pdata.getTheta());
        this.theta_splitSpinner.setValue(pdata.getThetaSplit());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        parametersPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        epsSpinner = new javax.swing.JSpinner();
        minPtsSpinner = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        thetaSpinner = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        theta_splitSpinner = new javax.swing.JSpinner();
        jPanel1 = new javax.swing.JPanel();
        cancelButton = new javax.swing.JButton();
        runButton = new javax.swing.JButton();
        progressPanel = new javax.swing.JPanel();
        statusProgressBar = new javax.swing.JProgressBar();
        statusLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("MONIC Settings");
        setMinimumSize(new java.awt.Dimension(400, 400));
        setModal(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        parametersPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Parameters"));
        parametersPanel.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Epsilon:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        parametersPanel.add(jLabel1, gridBagConstraints);

        epsSpinner.setModel(new javax.swing.SpinnerNumberModel(0.07d, 0.0d, 1.0d, 0.01d));
        epsSpinner.setPreferredSize(new java.awt.Dimension(60, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        parametersPanel.add(epsSpinner, gridBagConstraints);

        minPtsSpinner.setModel(new javax.swing.SpinnerNumberModel(3, 0, 5, 1));
        minPtsSpinner.setPreferredSize(new java.awt.Dimension(60, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        parametersPanel.add(minPtsSpinner, gridBagConstraints);

        jLabel2.setText("minPoints:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        parametersPanel.add(jLabel2, gridBagConstraints);

        jLabel3.setText("Theta:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        parametersPanel.add(jLabel3, gridBagConstraints);

        thetaSpinner.setModel(new javax.swing.SpinnerNumberModel(0.5d, 0.0d, 1.0d, 0.1d));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        parametersPanel.add(thetaSpinner, gridBagConstraints);

        jLabel4.setText("Theta-split:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        parametersPanel.add(jLabel4, gridBagConstraints);

        theta_splitSpinner.setModel(new javax.swing.SpinnerNumberModel(0.3d, 0.0d, 1.0d, 0.1d));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        parametersPanel.add(theta_splitSpinner, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 80;
        gridBagConstraints.ipady = 30;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        getContentPane().add(parametersPanel, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(3, 23, 3, 3);
        jPanel1.add(cancelButton, gridBagConstraints);

        runButton.setText("Run");
        runButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(runButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        getContentPane().add(jPanel1, gridBagConstraints);

        progressPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Progress"));
        progressPanel.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        progressPanel.add(statusProgressBar, gridBagConstraints);

        statusLabel.setMinimumSize(new java.awt.Dimension(100, 17));
        statusLabel.setPreferredSize(new java.awt.Dimension(100, 17));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        progressPanel.add(statusLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        getContentPane().add(progressPanel, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void runButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runButtonActionPerformed
        try {
            pdata.setEpsilon((double) this.epsSpinner.getValue());
            pdata.setMinPoint((int) this.minPtsSpinner.getValue());
            pdata.setTheta((double) this.thetaSpinner.getValue());
            pdata.setThetaSplit((double) this.theta_splitSpinner.getValue());
            MONIC clusterer = new MONIC(viewer, this, (double) this.epsSpinner.getValue(), (int) this.minPtsSpinner.getValue(), (double) this.thetaSpinner.getValue(), (double) this.theta_splitSpinner.getValue());
            clusterer.execute();
        } catch (Exception ex) {
            Logger.getLogger(DBScanSettings.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_runButtonActionPerformed

    public void setStatus(String status, boolean running) {
        this.statusLabel.setText(status);
        this.statusProgressBar.setIndeterminate(running);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JSpinner epsSpinner;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSpinner minPtsSpinner;
    private javax.swing.JPanel parametersPanel;
    private javax.swing.JPanel progressPanel;
    private javax.swing.JButton runButton;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JProgressBar statusProgressBar;
    private javax.swing.JSpinner thetaSpinner;
    private javax.swing.JSpinner theta_splitSpinner;
    // End of variables declaration//GEN-END:variables
}
