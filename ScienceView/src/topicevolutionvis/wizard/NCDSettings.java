/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package topicevolutionvis.wizard;

import topicevolutionvis.projection.ProjectionData;
import topicevolutionvis.projection.distance.kolmogorov.CompressorType;

/**
 *
 * @author USER
 */
public class NCDSettings extends javax.swing.JDialog {

    private static NCDSettings instance;
    private ProjectionData pdata;

    /**
     * Creates new form NCDSettings
     */
    public NCDSettings(javax.swing.JDialog parent) {
        super(parent);
        initComponents();
    }

    public static NCDSettings getInstance(java.awt.Container parent) {
        if ((instance == null || instance.getParent() != parent) && parent instanceof javax.swing.JDialog) {
            instance = new NCDSettings((javax.swing.JDialog) parent);
        }
        return instance;
    }

    public void display(ProjectionData pdata) {
        this.pdata = pdata;

        CompressorType compressorType = pdata.getCompressorType();
        if (compressorType.equals(CompressorType.BZIP2)) {
            this.bzip2RadioButton.setSelected(true);
        } else if (compressorType.equals(CompressorType.GZIP)) {
            this.gzipRadioButton.setSelected(true);
        }

        this.setLocationRelativeTo(this.getParent());
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        settingsPanel = new javax.swing.JPanel();
        gzipRadioButton = new javax.swing.JRadioButton();
        bzip2RadioButton = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("NCD Settings");
        setMinimumSize(new java.awt.Dimension(350, 150));

        settingsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Settings"));
        settingsPanel.setMinimumSize(new java.awt.Dimension(200, 120));
        settingsPanel.setPreferredSize(new java.awt.Dimension(200, 120));
        settingsPanel.setLayout(new java.awt.GridBagLayout());

        buttonGroup1.add(gzipRadioButton);
        gzipRadioButton.setText("gzip");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        settingsPanel.add(gzipRadioButton, gridBagConstraints);

        buttonGroup1.add(bzip2RadioButton);
        bzip2RadioButton.setText("bzip2");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        settingsPanel.add(bzip2RadioButton, gridBagConstraints);

        jLabel1.setText("Compressor:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        settingsPanel.add(jLabel1, gridBagConstraints);

        getContentPane().add(settingsPanel, java.awt.BorderLayout.CENTER);

        jPanel1.setMinimumSize(new java.awt.Dimension(250, 23));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        okButton.setText("Ok");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 30);
        jPanel1.add(okButton, gridBagConstraints);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(cancelButton, gridBagConstraints);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        this.pdata.setCompressorType(pdata.getCompressorType());
        this.dispose();
    }//GEN-LAST:event_okButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton bzip2RadioButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JRadioButton gzipRadioButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton okButton;
    private javax.swing.JPanel settingsPanel;
    // End of variables declaration//GEN-END:variables
}
