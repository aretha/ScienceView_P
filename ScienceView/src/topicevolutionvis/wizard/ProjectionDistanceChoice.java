/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ProjectionDistanceChoice.java
 *
 * Created on 20/10/2009, 14:27:26
 */
package topicevolutionvis.wizard;

import java.io.File;
import javax.swing.JFileChooser;
import topicevolutionvis.projection.ProjectionData;
import topicevolutionvis.projection.ProjectionType;
import topicevolutionvis.projection.distance.DissimilarityType;
import topicevolutionvis.util.SystemPropertiesManager;
import topicevolutionvis.utils.filefilter.DmatFileFilter;

/**
 *
 * @author Aretha
 */
public class ProjectionDistanceChoice extends WizardPanel {

    private ProjectionData pdata;

    /**
     * Creates new form ProjectionDistanceChoice
     */
    public ProjectionDistanceChoice(ProjectionData pdata) {
        this.pdata = pdata;
        initComponents();

        //adicionando os tipos de distância disponíveis ao combo box
        for (DissimilarityType disstype : DissimilarityType.getTypes()) {
            this.distanceComboBox.addItem(disstype);
        }
        this.distanceComboBox.setSelectedItem(DissimilarityType.COSINE_BASED);

        //adicionando os tipos de projeção disponíveis ao combo box
        for (ProjectionType pt : ProjectionType.getTypes()) {
            if (pt != ProjectionType.NONE) {
                projectionComboBox.addItem(pt);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        distance_buttonGroup = new javax.swing.ButtonGroup();
        compression_buttonGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        projectionComboBox = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        distanceComboBox = new javax.swing.JComboBox();
        distanceSettingsButton = new javax.swing.JButton();
        saveDistanceMatrixCheckBox = new javax.swing.JCheckBox();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Choose Projection and Distance"));
        setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Choose the Projection Technique"));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        projectionComboBox.setPreferredSize(new java.awt.Dimension(150, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(projectionComboBox, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(jPanel1, gridBagConstraints);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Choose the Distance Type"));
        jPanel2.setEnabled(false);
        jPanel2.setLayout(new java.awt.GridBagLayout());

        distanceComboBox.setPreferredSize(new java.awt.Dimension(150, 25));
        distanceComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                distanceComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 3, 3);
        jPanel2.add(distanceComboBox, gridBagConstraints);

        distanceSettingsButton.setText("Settings...");
        distanceSettingsButton.setEnabled(false);
        distanceSettingsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                distanceSettingsButtonActionPerformed(evt);
            }
        });
        jPanel2.add(distanceSettingsButton, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(jPanel2, gridBagConstraints);

        saveDistanceMatrixCheckBox.setText("Save the Distance Matrix");
        saveDistanceMatrixCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveDistanceMatrixCheckBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(saveDistanceMatrixCheckBox, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void saveDistanceMatrixCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveDistanceMatrixCheckBoxActionPerformed
        if (this.saveDistanceMatrixCheckBox.isSelected()) {
            final JFileChooser fc = new JFileChooser();
            fc.setAcceptAllFileFilterUsed(false);
            fc.setMultiSelectionEnabled(false);

            SystemPropertiesManager m = SystemPropertiesManager.getInstance();
            String directory = m.getProperty("DMAT.DIR");
            if (directory != null) {
                fc.setCurrentDirectory(new File(directory));
            } else {
                fc.setCurrentDirectory(new File("."));
            }
            DmatFileFilter filter = new DmatFileFilter();
            fc.setSelectedFile(new File(this.pdata.getCollectionName().concat(".").concat(filter.getFileExtension().toLowerCase())));

            fc.setFileFilter(filter);
            int result = fc.showSaveDialog(this);
            if (result == JFileChooser.APPROVE_OPTION) {
                File file = fc.getSelectedFile();
                this.pdata.setDistanceMatrixFilename(file.getAbsolutePath());
                m.setProperty(filter.getProperty(), file.getParent());
            } else {
                this.saveDistanceMatrixCheckBox.setSelected(false);
            }
        } else {
            this.pdata.setDistanceMatrixFilename("");
        }
    }//GEN-LAST:event_saveDistanceMatrixCheckBoxActionPerformed

    private void distanceComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_distanceComboBoxActionPerformed
        if (((DissimilarityType) this.distanceComboBox.getSelectedItem()) == DissimilarityType.KOLMOGOROV) {
            this.distanceSettingsButton.setEnabled(true);
        } else {
            this.distanceSettingsButton.setEnabled(false);
        }
    }//GEN-LAST:event_distanceComboBoxActionPerformed

    private void distanceSettingsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_distanceSettingsButtonActionPerformed
        NCDSettings.getInstance((ProjectionWizardView) getTopLevelAncestor()).display(pdata);
    }//GEN-LAST:event_distanceSettingsButtonActionPerformed

    public ProjectionDistanceChoice reset() {
        return this;
    }

    @Override
    public void refreshData() {
        //Setting the projection type
        ProjectionType projtype = (ProjectionType) this.projectionComboBox.getSelectedItem();
        this.pdata.setProjectionType(projtype);
        //Setting the type of distance

        DissimilarityType metrictype = (DissimilarityType) this.distanceComboBox.getSelectedItem();
        this.pdata.setDissimilarityType(metrictype);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup compression_buttonGroup;
    private javax.swing.JComboBox distanceComboBox;
    private javax.swing.JButton distanceSettingsButton;
    private javax.swing.ButtonGroup distance_buttonGroup;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JComboBox projectionComboBox;
    private javax.swing.JCheckBox saveDistanceMatrixCheckBox;
    // End of variables declaration//GEN-END:variables
}
