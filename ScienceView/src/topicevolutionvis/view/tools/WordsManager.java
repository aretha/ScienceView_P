/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * StopwordsManager.java
 *
 * Created on 05/05/2009, 16:01:30
 */
package topicevolutionvis.view.tools;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;
import topicevolutionvis.preprocessing.Startword;
import topicevolutionvis.preprocessing.Stopwords;
import topicevolutionvis.util.SystemPropertiesManager;
import topicevolutionvis.utils.filefilter.StopwordsFileFilter;

/**
 *
 * @author Aretha
 */
public class WordsManager extends JDialog {

    private DefaultTableModel currentWordsTableModel, newWordsTableModel;
    private boolean stopwordsDialog = true;

    /** Creates new form StopwordsManager */
    private WordsManager(java.awt.Frame parent, boolean stopwordsDialog) {
        super(parent);
        initComponents();
        this.stopwordsDialog = stopwordsDialog;
        adaptLayout();
    }

    private WordsManager(java.awt.Dialog parent, boolean stopwordsDialog) {
        super(parent);
        initComponents();
        this.stopwordsDialog = stopwordsDialog;
        adaptLayout();
    }

    private void adaptLayout() {
        if (!this.stopwordsDialog) {
            setTitle("Startwords List Manager");
            wordsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Startwords Manager"));
            newScrollPane.setBorder(javax.swing.BorderFactory.createTitledBorder("New Startwords"));
            wordsScrollPane.setBorder(javax.swing.BorderFactory.createTitledBorder("Current Startwords"));
            jLabel1.setText("Startwords File");
        }
    }

    public void display() {
        this.initModels();
        this.wordsTable.setModel(this.currentWordsTableModel);
        this.newWordsTable.setModel(this.newWordsTableModel);

        try {
            if (stopwordsDialog) {
                Stopwords stp = Stopwords.getInstance();
                this.fileTextField.setText(stp.getFilename().substring(stp.getFilename().lastIndexOf("\\") + 1));

                for (String stopword : stp.getStopwordList()) {
                    String[] row = new String[1];
                    row[0] = stopword;
                    this.currentWordsTableModel.addRow(row);
                }
            } else {
                Startword sta = Startword.getInstance();
                this.fileTextField.setText(sta.getFilename().substring(sta.getFilename().lastIndexOf("\\") + 1));

                for (int i = 0; i < sta.getStartwordList().size(); i++) {
                    String[] row = new String[2];
                    row[0] = sta.getStartwordList().get(i).word;
                    row[1] = sta.getStartwordList().get(i).weight.toString();
                    this.currentWordsTableModel.addRow(row);
                }
            }
        } catch (IOException ex) {
            Logger.getLogger(this.getClass().getName()).log(Level.SEVERE, null, ex);
        }

        this.pack();
        this.setLocationRelativeTo(this.getParent());
        this.setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        wordsPanel = new javax.swing.JPanel();
        stopwordsfilePanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        fileTextField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        currentstopwordsPanel = new javax.swing.JPanel();
        wordsScrollPane = new javax.swing.JScrollPane();
        wordsTable = new javax.swing.JTable();
        removeButton = new javax.swing.JButton();
        newstopwordsPanel = new javax.swing.JPanel();
        newScrollPane = new javax.swing.JScrollPane();
        newWordsTable = new javax.swing.JTable();
        newButton = new javax.swing.JButton();
        mergePanel = new javax.swing.JPanel();
        mergeButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        saveButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Stopwords Manager");
        setModal(true);

        wordsPanel.setLayout(new java.awt.BorderLayout());

        stopwordsfilePanel.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Stopwords File:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        stopwordsfilePanel.add(jLabel1, gridBagConstraints);

        fileTextField.setColumns(35);
        fileTextField.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        stopwordsfilePanel.add(fileTextField, gridBagConstraints);

        searchButton.setText("Search...");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        stopwordsfilePanel.add(searchButton, gridBagConstraints);

        wordsPanel.add(stopwordsfilePanel, java.awt.BorderLayout.NORTH);

        currentstopwordsPanel.setPreferredSize(new java.awt.Dimension(200, 373));
        currentstopwordsPanel.setLayout(new java.awt.BorderLayout());

        wordsScrollPane.setBorder(javax.swing.BorderFactory.createTitledBorder("Current Stopwords"));

        wordsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        wordsScrollPane.setViewportView(wordsTable);

        currentstopwordsPanel.add(wordsScrollPane, java.awt.BorderLayout.CENTER);

        removeButton.setText("Remove");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });
        currentstopwordsPanel.add(removeButton, java.awt.BorderLayout.PAGE_END);

        wordsPanel.add(currentstopwordsPanel, java.awt.BorderLayout.WEST);

        newstopwordsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        newstopwordsPanel.setPreferredSize(new java.awt.Dimension(200, 373));
        newstopwordsPanel.setLayout(new java.awt.BorderLayout());

        newScrollPane.setBorder(javax.swing.BorderFactory.createTitledBorder("New Stopwords"));

        newWordsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        newScrollPane.setViewportView(newWordsTable);

        newstopwordsPanel.add(newScrollPane, java.awt.BorderLayout.CENTER);

        newButton.setText("New");
        newButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newButtonActionPerformed(evt);
            }
        });
        newstopwordsPanel.add(newButton, java.awt.BorderLayout.PAGE_END);

        wordsPanel.add(newstopwordsPanel, java.awt.BorderLayout.EAST);

        mergePanel.setPreferredSize(new java.awt.Dimension(81, 23));
        mergePanel.setLayout(new java.awt.GridBagLayout());

        mergeButton.setText("<< Merge");
        mergeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mergeButtonActionPerformed(evt);
            }
        });
        mergePanel.add(mergeButton, new java.awt.GridBagConstraints());

        wordsPanel.add(mergePanel, java.awt.BorderLayout.CENTER);

        getContentPane().add(wordsPanel, java.awt.BorderLayout.CENTER);

        jPanel1.setPreferredSize(new java.awt.Dimension(195, 33));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(saveButton, gridBagConstraints);

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(closeButton, gridBagConstraints);

        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void initModels() {
        String[] titles;

        if (this.stopwordsDialog) {
            titles = new String[]{"Stopwords"};
        } else {
            titles = new String[]{"Startwords", "Weight"};
        }

        this.currentWordsTableModel = new DefaultTableModel(null, titles);
        this.newWordsTableModel = new DefaultTableModel(null, titles);
    }

    public static WordsManager getInstance(java.awt.Container parent, boolean stopwordsDialog) {
        if (parent instanceof javax.swing.JFrame) {
            return new WordsManager((javax.swing.JFrame) parent, stopwordsDialog);
        } else if (parent instanceof javax.swing.JDialog){
            return new WordsManager((javax.swing.JDialog) parent, stopwordsDialog);
        }
        return null;
    }

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        SystemPropertiesManager m = SystemPropertiesManager.getInstance();
        String directory = m.getProperty("SPW.DIR");
        final JFileChooser fc = new JFileChooser(directory);
        fc.setAcceptAllFileFilterUsed(false);
        fc.setMultiSelectionEnabled(false);
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fc.setFileFilter(new StopwordsFileFilter());

        int result = fc.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            try {
                String filename = fc.getSelectedFile().getAbsolutePath();
                m.setProperty("SPW.DIR", fc.getSelectedFile().getParent());
                m.setProperty("SPW.FILE", filename);

                Stopwords stp = Stopwords.getInstance();
                stp.changeStopwordList(filename);

                fileTextField.setText(filename);
                fileTextField.setCaretPosition(0);

                currentWordsTableModel = new DefaultTableModel(null, new String[]{"Stopwords"});
                newWordsTableModel = new DefaultTableModel(null, new String[]{"Stopwords"});
                wordsTable.setModel(currentWordsTableModel);
                newWordsTable.setModel(newWordsTableModel);

                for (String stopword : stp.getStopwordList()) {
                    String[] row = new String[1];
                    row[0] = stopword;
                    this.currentWordsTableModel.addRow(row);
                }
            } catch (IOException ex) {
                Logger.getLogger(WordsManager.class.getName()).log(Level.SEVERE, null, ex);
            }


        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        this.newWordsTableModel.addRow(new String[]{""});
        this.newWordsTable.editCellAt(this.newWordsTableModel.getRowCount() - 1, 0);
        this.newWordsTable.requestFocusInWindow();
    }//GEN-LAST:event_newButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        try {
            SystemPropertiesManager systemPropertiesManager = SystemPropertiesManager.getInstance();
            String stopwordsDirectory = systemPropertiesManager.getProperty("SPW.DIR");

            final JFileChooser fc = new JFileChooser();
            if (stopwordsDirectory != null) {
                fc.setCurrentDirectory(new File(stopwordsDirectory));
            } else {
                fc.setCurrentDirectory(new File("."));
            }
            fc.setFileFilter(new StopwordsFileFilter());
            int result = fc.showSaveDialog(this);
            if (result == JFileChooser.APPROVE_OPTION) {
                String filename = fc.getSelectedFile().getAbsolutePath();
                Stopwords stp = Stopwords.getInstance();
                stp.saveStopwordsList(filename);
                systemPropertiesManager.setProperty("SPW.DIR", fc.getSelectedFile().getParent());
            }
        } catch (IOException ex) {
            Logger.getLogger(WordsManager.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_saveButtonActionPerformed

    private void mergeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mergeButtonActionPerformed
        try {
           
            this.newWordsTable.editCellAt(0, 0);
            String newStopword;
            Stopwords currentStopwords = Stopwords.getInstance();
            int numberOfNewStopwords = newWordsTableModel.getRowCount();
             ArrayList<String> newStopwords = new ArrayList<>(numberOfNewStopwords);
            for (int i = 0; i < numberOfNewStopwords; i++) {
                newStopword = (String) this.newWordsTableModel.getValueAt(i, 0);
                if (newStopword.trim().length() > 0) {
                    newStopwords.add(newStopword.trim());
                }
            }

            currentStopwords.addStopwords(newStopwords);

            String[] titles = new String[]{"Stopwords"};
            currentWordsTableModel = new DefaultTableModel(null, titles);
            newWordsTableModel = new DefaultTableModel(null, titles);

            wordsTable.setModel(currentWordsTableModel);
            newWordsTable.setModel(newWordsTableModel);
            for (String stopword : currentStopwords.getStopwordList()) {
                String[] row = new String[1];
                row[0] = stopword;
                currentWordsTableModel.addRow(row);
            }
        } catch (Exception ex) {
            Logger.getLogger(WordsManager.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_mergeButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        try {
            int index = wordsTable.getSelectedRow();
            if (index != -1) {//se alguma linha está selecionada
                String stopword = (String) currentWordsTableModel.getValueAt(index, 0);
                currentWordsTableModel.removeRow(index);
                Stopwords stp = Stopwords.getInstance();
                stp.removeStopword(stopword);
            }
        } catch (Exception ex) {
            Logger.getLogger(WordsManager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_removeButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JPanel currentstopwordsPanel;
    private javax.swing.JTextField fileTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton mergeButton;
    private javax.swing.JPanel mergePanel;
    private javax.swing.JButton newButton;
    private javax.swing.JScrollPane newScrollPane;
    private javax.swing.JTable newWordsTable;
    private javax.swing.JPanel newstopwordsPanel;
    private javax.swing.JButton removeButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JPanel stopwordsfilePanel;
    private javax.swing.JPanel wordsPanel;
    private javax.swing.JScrollPane wordsScrollPane;
    private javax.swing.JTable wordsTable;
    // End of variables declaration//GEN-END:variables
}
